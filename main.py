'''
--------------------------Lessons Flask form youtube chanel selfedu--------------------------
'''
about= "Lesson 09"
code_name= "add_post"
'''
üîª Introduction:
    List-----------------------------------------------------------------------------------
        ‚úÖ SQLite
        ‚ö™Ô∏è Add post
        üî¥ app.config.from_object(env) (line 29)
        üîµ Lesson 09 stop on 06:00
    Legend-----------------------------------------------------------------------------------
        ‚úÖ Done
        ‚ö™Ô∏è Plan
        ‚ö´Ô∏è Low
        üîµ Medium
        üî¥ High
        ‚ùóÔ∏è Critical
'''

import os
import sqlite3
from flask import Flask, render_template, url_for, request, flash, session, redirect, abort, g
from dotenv import load_dotenv
from FDataBase import FDataBase

# env=load_dotenv('.env')
load_dotenv()

app = Flask(__name__)
# app.config.from_object(env) #‚ùóÔ∏èThis line doesn't work
app.config.update(os.environ)
app.config.update(dict(DATA_BASE=os.path.join(app.root_path, 'site.db')))

def connect_db():
    conn=sqlite3.connect(app.config['DATA_BASE'])
    conn.row_factory=sqlite3.Row
    return conn

def create_db():
    print(app.config['DATA_BASE'])
    db=connect_db()
    with app.open_resource('sql_db.sql', mode='r') as f:
        db.cursor().executescript(f.read())
    db.commit()
    db.close()

def get_db():
    if not hasattr(g, 'link_db'):
        g.link_db=connect_db()
    return g.link_db

@app.route('/')
def index():
    print(url_for("index"))
    db=get_db()
    dbase=FDataBase(db)
    menu=dbase.get_menu()
    return render_template('index.html', menu=dbase.get_menu(), posts=dbase.get_posts_announce())

@app.route('/add_post', methods=["POST", "GET"])
def add_post():
    print(url_for("add_post"))
    db=get_db()
    dbase=FDataBase(db)
    menu=dbase.get_menu()
    if request.method=="POST":
        if len(request.form['name'])>4 and len(request.form['post'])>10:
            res = dbase.add_post(request.form['name'], request.form['post'])
            if res:
                flash("–°—Ç–∞—Ç—å—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞", category='success')
            else:
                flash("–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—å–∏", category='error')
        else:
            flash("–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—å–∏", category='error')
    return render_template('add_post.html', title="–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—å–∏", menu=dbase.get_menu())

@app.route("/post/<int:id_post>")
def show_post(id_post):
    print(url_for("show_post", id_post=id_post))
    db=get_db()
    dbase=FDataBase(db)
    menu=dbase.get_menu()
    title, text = dbase.get_post(id_post)
    if not title:
        abort(404)
    return render_template('post.html', title=title, text=text, menu=dbase.get_menu())

@app.route('/about')
def about():
    print(url_for("about"))
    db=get_db()
    dbase=FDataBase(db)
    menu=dbase.get_menu()
    return render_template('about.html', title="–û —Å–∞–π—Ç–µ", menu=dbase.get_menu())

@app.route('/login', methods=["POST", "GET"])
def login():
    print(url_for("login"))
    db=get_db()
    dbase=FDataBase(db)
    menu=dbase.get_menu()
    if 'userLogged' in session:
        return redirect(url_for('profile', username=session['userLogged']))
    elif request.method=="POST" and request.form['username']=='danyash' and request.form['pswd']=='123':
        session['userLogged']=request.form['username']
        return redirect(url_for('profile', username=session['userLogged']))
    return render_template('login.html', title="–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è", menu=dbase.get_menu())

@app.route('/contact', methods=["POST", "GET"])
def contact():
    print(url_for('contact'))
    db=get_db()
    dbase=FDataBase(db)
    menu=dbase.get_menu()
    if request.method=="POST":
        if len(request.form['username'])>2:
            flash("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ", category="success")
        else:
            flash("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏", category="error")
        print(request.form)
        print(request.form['username'])
    return render_template('contact.html', title="–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å", menu=menu)

@app.route('/profile/<path:username>')
def profile(username):
    print(url_for("profile", username=username))
    db=get_db()
    dbase=FDataBase(db)
    menu=dbase.get_menu()
    if 'userLogged' not in session or session['userLogged']!=username:
        abort(401)
    return f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username}"

@app.teardown_appcontext
def close_db(error):
    if hasattr(g, 'link_db'):
        print('close connection data base')
        g.link_db.close()


@app.errorhandler(404)
def page_not_found(error):
    db=get_db()
    dbase=FDataBase(db)
    menu=dbase.get_menu()
    return render_template('page404.html', title="–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞", menu=dbase.get_menu()), 404

# with app.test_request_context():
#     print(url_for("index"))

# with app.test_request_context():
#     print(url_for("about"))

if __name__=="__main__":
    app.run(debug=True)